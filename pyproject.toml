[project]
name = "ss-image-processor"
version = "0.1.0"
description = "Python tool for converting image sequences to WebP/AVIF format"
requires-python = ">=3.10"
dependencies = [
    "pillow>=10.0.0",
    "opencv-python>=4.12.0.88",
    "numpy>=2.2.6",
]

[project.scripts]
webpseq = "ss_image_processor.cli.main:main"
webpseq-viewer = "ss_image_processor.cli.viewer:main"
webpseq-metadata = "ss_image_processor.cli.metadata:main"

[project.optional-dependencies]
dev = [
    "black==24.10.0",
    "ruff==0.8.2",
    "mypy==1.13.0",
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "pre-commit>=3.5.0",
    "types-pillow>=10.0.0",
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | node_modules
  )/
)
'''

[tool.ruff]
line-length = 120
target-version = "py310"
src = ["src"]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "SIM",  # flake8-simplify
    "RUF",  # ruff-specific rules
]
ignore = [
    "E501",  # Line too long - handled by black
    "B008",  # Do not perform function calls in argument defaults
]

[tool.ruff.lint.isort]
known-first-party = ["ss_image_processor"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]  # Allow assert in tests

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
check_untyped_defs = true
disallow_untyped_defs = false
namespace_packages = true
mypy_path = "src"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
pythonpath = ["src"]
addopts = [
    "--verbose",
    "--strict-markers",
    "--tb=short",
]

[tool.coverage.run]
source = ["src/ss_image_processor"]
omit = ["*/tests/*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = [
    "black==24.10.0",
    "mypy==1.13.0",
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-cov>=6.2.1",
    "ruff==0.8.2",
    "types-pillow>=10.2.0.20240822",
]
